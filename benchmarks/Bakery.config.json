{
    "preds"  :  [
        "num[VARI] > num[VARJ]",
        "num[VARI] = num[VARJ]",
        "num[VARI] = 0",
        "num[VARJ] = 0",
        "\\E NK \\in Nat : num[VARI] = NK",
        "flag[VARI]",
        "flag[VARJ]",
        "flag[nxt[VARI]]",
        "flag[nxt[VARJ]]",
        "VARI # VARJ /\\ pc = pc",
        "pc[VARI] = \"ncs\"",
        "pc[VARI] \\in {\"ncs\",\"e1\",\"exit\"}",
        "pc[VARI] \\in {\"ncs\",\"e1\",\"e2\"}",
        "pc[VARJ] \\in {\"ncs\",\"e1\",\"exit\"}",
        "pc[VARJ] \\in {\"ncs\",\"e1\",\"e2\"}",
        "pc[VARI] = \"exit\"",
        "pc[VARI] = \"e1\"",
        "pc[VARI] = \"e2\"",
        "pc[VARI] = \"e3\"",
        "pc[VARI] = \"e4\"",
        "pc[VARI] = \"cs\"",
        "pc[VARI] = \"w1\"",
        "pc[VARI] \\in {\"w1\",\"w2\"}",
        "pc[VARI] \\in {\"e4\",\"w1\",\"w2\"}",
        "pc[VARJ] \\in {\"e4\",\"w1\",\"w2\"}",
        "((pc[VARJ] \\in {\"w1\",\"w2\"}) /\\ (pc[VARI] = \"w1\"))",
        "pc[VARI] = \"w2\"",
        "pc[VARJ] = \"ncs\"",
        "pc[VARJ] = \"exit\"",
        "pc[VARJ] = \"e1\"",
        "pc[VARJ] = \"e2\"",
        "pc[VARJ] = \"e3\"",
        "pc[VARJ] = \"e4\"",
        "pc[VARJ] = \"cs\"",
        "pc[VARJ] = \"w1\"",
        "pc[VARJ] \\in {\"w1\",\"w2\"}",
        "pc[VARJ] = \"w2\"",
        "(pc[nxt[VARI]] = \"w2\")",
        "(pc[nxt[VARI]] = \"e2\")",
        "(pc[nxt[VARI]] = \"e3\")",
        "(pc[nxt[VARJ]] = \"e2\")",
        "(pc[nxt[VARJ]] = \"e3\")",
        "unchecked[VARI] = {}",
        "unchecked[VARJ] = {}",
        "unchecked[VARI] = Procs",
        "unchecked[VARJ] = Procs",
        "unchecked[VARI] = Procs \\ {VARI}",
        "unchecked[VARJ] = Procs \\ {VARJ}",
        "VARI \\in unchecked[VARI]",
        "VARI \\in unchecked[VARJ]",
        "VARJ \\in unchecked[VARI]",
        "VARJ \\in unchecked[VARJ]",
        "VARI \\in unchecked[nxt[VARI]]",
        "VARJ \\in unchecked[nxt[VARJ]]",
        "VARJ \\in Procs \\ {VARI}",
        "VARI \\in (Procs \\ unchecked[VARI]) \\ {VARI}",
        "VARJ \\in (Procs \\ unchecked[VARJ]) \\ {VARJ}",
        "VARJ \\in (Procs \\ unchecked[VARI]) \\ {VARI}",
        "unchecked[VARI] = 1..(VARI-1)",
        "unchecked[VARJ] = 1..(VARI-1)",
        "\\E UI \\in unchecked[VARI] : nxt = [nxt EXCEPT ![VARI] = UI]",
        "\\E UI \\in unchecked[VARJ] : nxt = [nxt EXCEPT ![VARJ] = UI]",
        "nxt[VARI] = VARJ",
        "nxt[VARI] = VARI",
        "nxt[VARJ] = VARJ",
        "nxt[VARI] < nxt[VARI]",
        "nxt[VARI] \\in unchecked[VARI]",
        "nxt[VARJ] \\in unchecked[VARJ]",
        "max[VARI] = 0",
        "max[VARI] = max[VARJ]",
        "max[VARI] = num[VARI]",
        "max[VARI] < num[VARI]",
        "max[VARJ] < num[VARJ]",
        "max[VARI] = num[VARJ]",
        "max[VARI] < num[VARJ]",
        "max[VARI] > num[VARJ]",
        "max[nxt[VARI]] >= num[VARI]",
        "max[nxt[VARJ]] >= num[VARJ]",
        "max[VARI] < max[VARJ]",
        "max[VARJ] < max[VARI]",
        "max[VARJ] >= num[VARI]",
        "num[nxt[VARI]] = 0",
        "num[nxt[VARJ]] = 0",
        "<<num[VARI], VARI>> \\prec <<num[nxt[VARI]], nxt[VARI]>>",
        "<<num[VARI], VARI>> \\prec <<num[nxt[VARJ]], nxt[VARJ]>>",
        "<<num[VARI],VARI>> \\prec <<num[VARJ],VARJ>>"
    ],
    "action_local_preds":{
        "w1bAction": [
        ],
        "w2Action":[
        ]
    },
    "preds_alt" : [],
    "safety"  :  "H_MutualExclusion",
    "constants"  : {
        "N": ["1", "2", "3"],
        "Nat": ["{0,1,2,3}"]
    },
    "actions": [
        "ncsAction",
        "e1Action",
        "e2Action",
        "e3Action",
        "e4Action",
        "w1Action",
        "w2Action",
        "csAction",
        "exitAction"
    ],
    "max_tlc_inv_depth": 100,
    "simulation_inv_check": true,
    "simulation_inv_check_num_states": 2000000,
    "simulation_inv_check_depth": 60,
    "constraint"  :  "",
    "quant_inv"  :  "\\A VARI \\in Procs : \\A VARJ \\in Procs : ",
    "quant_inv_alt"  :  null,
    "quant_vars": ["VARI", "VARJ"],
    "model_consts"  :  "",
    "symmetry" : false,
    "typeok"  :  "TypeOK",
    "tlc_specific_spec": false,
    "try_final_minimize": false,
    "simulate"  :  true,
    "tlaps_proof_config": {
        "assumes": [
        ],
        "lemma_def_expands": {
            "Safety": ["H_MutualExclusion"]
        },
        "action_def_expands":{
        }
    }
}