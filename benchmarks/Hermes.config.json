{
    "preds"  :  [
        "nodeState[VARI] = \"valid\"",
        "nodeState[VARI] = \"invalid\"",
        "nodeState[VARI] = \"invalid_write\"",
        "nodeState[VARI] = \"write\"",
        "nodeState[VARI] = \"replay\"",
        "nodeState[VARI] \\in {\"write\", \"replay\"}",
        "nodeState[VARI] \\in {\"write\", \"invalid_write\", \"replay\"}",
        "nodeState[VARI] \\in {\"valid\", \"invalid\", \"replay\"}",
        "nodeState[VARJ] = \"valid\"",
        "nodeState[VARJ] = \"invalid\"",
        "nodeState[VARJ] = \"invalid_write\"",
        "nodeState[VARJ] = \"write\"",
        "nodeState[VARJ] = \"replay\"",
        "nodeState[VARI] \\in {\"write\", \"replay\"}",
        "nodeState[VARI] \\in {\"invalid\", \"replay\"}",
        "nodeState[VARI] \\in {\"write\", \"valid\"}",
        "nodeState[VARJ] \\in {\"write\", \"replay\"}",
        "nodeState[VARJ] \\in {\"invalid\", \"replay\"}",
        "nodeState[VARJ] \\in {\"valid\", \"invalid\", \"replay\"}",
        "nodeState[VARJ] \\in {\"write\", \"valid\"}",
        "nodeTS[VARI] = nodeTS[VARJ]",
        "greaterOrEqualTS(nodeTS[VARI].version, nodeTS[VARI].tieBreaker, nodeTS[VARJ].version, nodeTS[VARJ].tieBreaker)",
        "nodeTS[VARI].version = nodeTS[VARJ].version",
        "nodeTS[VARI].version > nodeTS[VARJ].version",
        "nodeTS[VARI].version >= nodeTS[VARJ].version",
        "nodeTS[VARI].version < nodeTS[VARJ].version",
        "nodeTS[VARI].tieBreaker = VARI",
        "nodeTS[VARI].tieBreaker = VARJ",
        "nodeLastWriteTS[VARI].tieBreaker = VARI",
        "nodeLastWriteTS[VARI].tieBreaker = VARJ",
        "nodeTS[VARI].tieBreaker = nodeTS[VARJ].tieBreaker",
        "nodeTS[VARI].tieBreaker < nodeTS[VARJ].tieBreaker",
        "nodeTS[VARI].tieBreaker > nodeTS[VARJ].tieBreaker",
        "nodeTS[VARI].tieBreaker <= nodeTS[VARJ].tieBreaker",
        "nodeTS[VARI] = nodeLastWriteTS[VARI]",
        "nodeTS[VARI].version = nodeLastWriteTS[VARJ].version",
        "nodeTS[VARI].version > nodeLastWriteTS[VARJ].version",
        "nodeTS[VARI].tieBreaker = nodeLastWriteTS[VARJ].tieBreaker",
        "nodeTS[VARI].tieBreaker > nodeLastWriteTS[VARJ].tieBreaker",
        "greaterTS(nodeTS[VARI].version, nodeTS[VARI].tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "nodeTS[VARI].tieBreaker = nodeLastWriteTS[VARI].tieBreaker",
        "nodeTS[VARI].tieBreaker = nodeLastWriteTS[VARJ].tieBreaker",
        "NewestVALMsg(VARMVALI) /\\ msgsVAL = msgsVAL",
        "VARMVALI.version = nodeTS[VARI].version",
        "VARMVALI.version < nodeTS[VARI].version",
        "VARMVALI.tieBreaker = nodeTS[VARI].tieBreaker",
        "VARMVALI.tieBreaker < nodeTS[VARI].tieBreaker",
        "equalTS(VARMVALI.version, VARMVALI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "equalTS(VARMVALI.version, VARMVALI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterTS(VARMVALI.version, VARMVALI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterTS(VARMVALI.version, VARMVALI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMVALI.version, VARMVALI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMVALI.version, VARMVALI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "VARMACKI.version = nodeTS[VARI].version",
        "VARMACKI.version < nodeTS[VARI].version",
        "VARMACKI.tieBreaker = nodeTS[VARI].tieBreaker",
        "VARMACKI.tieBreaker < nodeTS[VARI].tieBreaker",
        "equalTS(VARMACKI.version, VARMACKI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "equalTS(VARMACKI.version, VARMACKI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterTS(VARMACKI.version, VARMACKI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterTS(VARMACKI.version, VARMACKI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMACKI.version, VARMACKI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMACKI.version, VARMACKI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "VARMACKI.sender = VARI",
        "VARMACKI.sender = VARJ",
        "VARMACKI.sender  \\notin nodeRcvedAcks[VARI]",
        "VARMACKI.sender  \\in nodeRcvedAcks[VARJ]",
        "VARMINVI.sender = VARI",
        "VARMINVI.sender = VARJ",
        "VARMINVI.sender \\in aliveNodes",
        "VARMINVI.version = nodeTS[VARI].version",
        "VARMINVI.version = nodeTS[VARJ].version",
        "VARMINVI.version < nodeTS[VARI].version",
        "VARMINVI.version < nodeTS[VARJ].version",
        "VARMINVI.tieBreaker = VARI",
        "VARMINVI.tieBreaker = VARJ",
        "VARMINVI.tieBreaker = epochID",
        "VARMINVI.tieBreaker > epochID",
        "VARMINVI.tieBreaker = nodeTS[VARI].tieBreaker",
        "VARMINVI.tieBreaker = nodeTS[VARJ].tieBreaker",
        "VARMINVI.tieBreaker < nodeTS[VARI].tieBreaker",
        "VARMINVI.tieBreaker < nodeTS[VARJ].tieBreaker",
        "equalTS(VARMINVI.version, VARMINVI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "equalTS(VARMINVI.version, VARMINVI.tieBreaker, nodeTS[VARJ].version, nodeTS[VARJ].tieBreaker)",
        "equalTS(VARMINVI.version, VARMINVI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterTS(VARMINVI.version, VARMINVI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterTS(VARMINVI.version, VARMINVI.tieBreaker, nodeTS[VARJ].version, nodeTS[VARJ].tieBreaker)",
        "greaterTS(VARMINVI.version, VARMINVI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMINVI.version, VARMINVI.tieBreaker, nodeTS[VARI].version, nodeTS[VARI].tieBreaker)",
        "greaterOrEqualTS(VARMINVI.version, VARMINVI.tieBreaker, nodeLastWriteTS[VARI].version, nodeLastWriteTS[VARI].tieBreaker)",
        "VARI \\in nodeRcvedAcks[VARJ]",
        "VARJ \\in nodeRcvedAcks[VARI]",
        "receivedAllAcks(VARI) /\\ nodeRcvedAcks = nodeRcvedAcks",
        "receivedAllAcks(VARJ) /\\ nodeRcvedAcks = nodeRcvedAcks",
        "VARMACKI.epochID = epochID",
        "VARMACKI.epochID > epochID",
        "VARMINVI.epochID = epochID",
        "VARMINVI.epochID > epochID",
        "nodeLastWriter[VARI] = VARJ",
        "nodeLastWriter[VARI] = VARI",
        "nodeLastWriter[VARI] = nodeLastWriter[VARJ]",
        "nodeLastWriter[VARI] < nodeLastWriter[VARJ]",
        "nodeLastWriter[VARI] \\in aliveNodes",
        "nodeLastWriter[VARJ] \\in aliveNodes",
        "nodeWriteEpochID[VARI] < epochID",
        "nodeWriteEpochID[VARJ] < epochID",
        "nodeWriteEpochID[VARI] = epochID",
        "nodeWriteEpochID[VARJ] = epochID",
        "VARI \\in aliveNodes",
        "VARJ \\in aliveNodes"
    ],
    "action_local_preds":{
        "NodeFailureAction": [
        ],
        "HCoordWriteReplayAction": [
        ],
        "HFollowerWriteReplayAction": [
        ]
    },
    "preds_alt" : [],
    "safety"  :  "HConsistent",
    "constants"  : {
        "H_NODES" : ["{0,1,2}", "{0,1,2,3}"],
        "H_MAX_VERSION" : ["3"]
    },
    "large_instance_inv_check_index": 1,
    "actions": [],
    "constraint"  :  "",
    "quant_inv"  :  "\\A VARI \\in H_NODES : \\A VARJ \\in H_NODES : \\A VARMVALI \\in msgsVAL : \\A VARMACKI \\in msgsACK : \\A VARMINVI \\in msgsINV : ",
    "quant_inv_alt"  :  null,
    "quant_vars": ["VARI", "VARJ", "VARMVALI", "VARMACKI", "VARMINVI"],
    "model_consts"  :  "",
    "symmetry" : false,
    "typeok"  :  "TypeOKRandom",
    "tlc_specific_spec": true,
    "try_final_minimize": false,
    "max_tlc_inv_depth": 17,
    "simulation_inv_check": true,
    "simulation_inv_check_num_states": 10000000,
    "simulation_inv_check_depth": 40,
    "simulate"  :  true,
    "tlaps_proof_config": {
        "assumes": [
        ],
        "lemma_def_expands": {
            "Safety": ["HConsistent"],
            "Inv532_R0_0_I1": ["greaterOrEqualTS,greaterTS,equalTS"]
        },
        "action_def_expands":{
            "HReadAction": ["h_upd_nothing", "h_upd_not_aliveNodes", "h_upd_aliveNodes"],
            "HSendValsAction": ["receivedAllAcks", "VALMessage"]
        }
    }
}