{
    "preds"  :  [
        "rKeyState[VARI] = \"valid\"",
        "VARI # VARJ /\\ rKeyState[VARI] = \"valid\"",
        "rKeyState[VARI] = \"invalid\"",
        "rKeyState[VARI] = \"write\"",
        "VARI # VARJ /\\ rKeyState[VARI] = \"write\"",
        "rKeyState[VARI] = \"replay\"",
        "rKeyState[VARJ] = \"valid\"",
        "rKeyState[VARJ] = \"invalid\"",
        "rKeyState[VARJ] = \"write\"",
        "VARI # VARJ /\\ rKeyState[VARJ] = \"write\"",
        "rKeyState[VARJ] = \"replay\"",
        "rKeyState[VARI] \\in {\"write\", \"replay\"}",
        "rKeyState[VARJ] \\in {\"write\", \"replay\"}",
        "rKeyVersion[VARI] = rKeyVersion[VARJ]",
        "rKeyVersion[VARI] > rKeyVersion[VARJ]",
        "rKeyVersion[VARI] <= rKeyVersion[VARJ]",
        "rKeySharers[VARI] = \"owner\"",
        "rKeySharers[VARI] = \"reader\"",
        "rKeySharers[VARI] = \"non-sharer\"",
        "rKeySharers[VARJ] = \"owner\"",
        "rKeySharers[VARJ] = \"reader\"",
        "rKeySharers[VARJ] = \"non-sharer\"",
        "VARMVAL.type = \"VAL\" /\\ VARMVAL.version = rKeyVersion[VARI]",
        "VARMVAL.type = \"VAL\" /\\ VARMVAL.version > rKeyVersion[VARI]",
        "VARMVAL.type = \"VAL\" /\\ VARMVAL.version = rKeyVersion[VARJ]",
        "VARMACK.version = rKeyVersion[VARI]",
        "VARMACK.version <= rKeyVersion[VARI]",
        "VARMACK.version < rKeyVersion[VARI]",
        "VARMACK.version < rKeyVersion[VARJ]",
        "VARMACK.version >= rKeyVersion[VARI]",
        "VARMACK.version = rKeyVersion[VARJ]",
        "VARMACK.version = rKeyVersion[VARMACK.sender]",
        "rKeyVersion[VARI] = rKeyVersion[VARMACK.sender]",
        "VARMACK.version <= rKeyVersion[VARJ]",
        "VARMACK.sender \\in rKeyRcvedACKs[VARI]",
        "VARMACK.sender \\in rKeyRcvedACKs[VARJ]",
        "VARMACK.sender = VARJ",
        "VARI # VARJ /\\ rKeyState = rKeyState",
        "VARMACK.epochID = rEpochID",
        "VARMACK.epochID < rEpochID",
        "VARI # VARJ /\\ VARI \\in rKeyRcvedACKs[VARI]",
        "VARI \\in rKeyRcvedACKs[VARJ]",
        "VARJ \\in rKeyRcvedACKs[VARI]",
        "VARI # VARJ /\\ VARJ \\in rKeyRcvedACKs[VARI]",
        "rKeyRcvedACKs[VARI] = {}",
        "\\E kk,mm \\in rAliveNodes: kk /= VARI /\\ mm /= VARI /\\ mm /= kk",
        "Cardinality(rAliveNodes) > 2",
        "VARMINV.sender = VARI",
        "VARMINV.sender = VARJ",
        "VARMINV.version = rKeyVersion[VARI]",
        "VARMINV.version = rKeyVersion[VARMINV.sender]",
        "VARMINV.version > rKeyVersion[VARI]",
        "VARMINV.version > rKeyVersion[VARMINV.sender]",
        "rKeyVersion[VARI] = rKeyVersion[VARMINV.sender]",
        "rKeyVersion[VARI] < rKeyVersion[VARMINV.sender]",
        "VARMINV.version <= rKeyVersion[VARI]",
        "VARMINV.version = rKeyVersion[VARJ]",
        "VARMINV.version > rKeyVersion[VARJ]",
        "VARMINV.version >= rKeyVersion[VARJ]",
        "VARMINV.sender \\in rKeyRcvedACKs[VARI]",
        "VARMINV.sender \\in rKeyRcvedACKs[VARJ]",
        "VARMINV.sender \\in rAliveNodes",
        "VARMINV.epochID = rEpochID",
        "VARMINV.epochID < rEpochID",
        "VARMINV.epochID = rNodeEpochID[VARI]",
        "VARMINV.epochID < rNodeEpochID[VARI]",
        "rNodeEpochID[VARI] < rEpochID",
        "rNodeEpochID[VARI] = rEpochID",
        "rNodeEpochID[VARJ] = rEpochID",
        "rMsgsINV = {}"
    ],
    "action_local_preds":{
    },
    "preds_alt" : [],
    "safety"  :  "RConsistentInvariant",
    "large_instance_inv_check_index": 1,
    "cti_gen_instance_indexes": [0,1],
    "constants"  : {
        "R_NODES" : ["{33,44,55}", "{33,44,55,66}"],
        "R_MAX_VERSION" : ["4"],
        "R_MAX_EPOCH" : ["4"]
    },
    "actions": [],
    "constraint"  :  "",
    "quant_inv"  :  "\\A VARI \\in rAliveNodes : \\A VARJ \\in rAliveNodes : \\A VARMVAL \\in rMsgsVAL : \\A VARMACK \\in rMsgsACK : \\A VARMINV \\in rMsgsINV : ",
    "quant_inv_alt"  :  null,
    "quant_vars": ["VARI", "VARJ", "VARMVAL", "VARMACK", "VARMINV"],
    "model_consts"  :  "",
    "symmetry" : false,
    "typeok"  :  "TypeOKRandom",
    "tlc_specific_spec": true,
    "try_final_minimize": false,
    "max_tlc_inv_depth": 100,
    "simulation_inv_check": false,
    "simulation_inv_check_num_states": 2500000,
    "simulation_inv_check_depth": 35,
    "simulate"  :  true,
    "tlaps_proof_config": {
        "assumes": [
            "IsFiniteSet(R_NODES)",
            "R_NODES \\subseteq Nat /\\ R_MAX_VERSION \\in Nat"
        ],
        "lemma_def_expands": {
            "Safety": ["RConsistentInvariant", "RMessageINV"]
        },
        "action_def_expands":{
            "RNodeFailureAction": ["RMessageINV", "RNoChanges_but_membership"],
            "RWriteAction": ["RMessageINV", "RMessageVAL", "RMessageACK"],
            "RRcvInvAction": ["RMessageINV", "RMessageVAL", "RMessageACK"],
            "RRcvValAction": ["RMessageINV", "RMessageVAL", "RMessageACK"]
        }
    }
}